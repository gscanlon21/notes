
h6 {
	// Filename header for code blocks.
	color: color(--color-code);
	background-color: color(--color-code-bg);
	margin-block-start: $base-padding / 2;
	margin-block-end: $base-padding / -2;
	padding: ($base-padding / 2) $base-padding;
	border-radius: $border-radius $border-radius 0 0;
	max-width: max-content;
	font-size: small;

	&:empty {
		display: none;
	}
}

pre+h6 {
	// Attribution footer for code blocks.
	margin-block-start: 0;
	border-radius: 0 0 $border-radius $border-radius;
	float: right;
	font-size: x-small;

	&:empty {
		display: none;
	}

    >a {
        color: color(--color-code-link);

        &:focus,
        &:hover {
            color: color(--color-code-link, 0.5);
        }

        &:visited {
            color: color(--color-code-link-visited);
        }
    }
}

pre {
	cursor: pointer;
	padding: $base-padding;
	margin-block-start: $base-padding / 2;
	margin-block-end: 0;

	+pre {
		margin-block-start: 0;
		padding-top: 0;
	}

	>code[data-lang]::before {
		// Display the code lang as the shell context
		content: attr(data-lang) "$";
		color: color(--color-code, 0.75);
		padding-right: $base-padding;
	}
}

code {
	background-color: color(--color-code-bg);
	color: color(--color-code);
    border-radius: .25em;
	padding-inline: .2em;
	padding-bottom: .1em;
    margin-inline: .1em;
	font-size: large;
	margin-bottom: 0;
	cursor: pointer;
}

// Copy animation for inline code spans.
code.copied:not(:has(span)) {
	animation-duration: 500ms;
	// We're using linear for a smoother
	// ... animation, otherwise ease-in.
	animation-timing-function: linear;
	animation-name: copy-inline;
}

// Copy animation for code blocks.
pre.copied > code > span {
	animation-delay: 250ms;
	animation-duration: 250ms;
	animation-fill-mode: backwards;
	// We're using linear for a smoother
	// ... animation, otherwise ease-in.
	animation-timing-function: linear;
	animation-name: copy-block;
}

@keyframes copy-inline {
	0% {
		text-underline-offset: 1px;
		text-underline-position: under;
		text-decoration-skip-ink: none;
		text-decoration-thickness: 4px;
		text-decoration-line: underline;
		text-decoration-color: color(--color-code);
	}

	100% {
		text-underline-offset: -1.75em;
		text-underline-position: under;
		text-decoration-skip-ink: none;
		text-decoration-thickness: 4px;
		text-decoration-line: underline;
		text-decoration-color: transparent;
	}
}

@keyframes copy-block {
	0% {
		text-underline-offset: 0;
		text-underline-position: under;
		text-decoration-skip-ink: none;
		text-decoration-thickness: 3px;
		text-decoration-line: underline;
		text-decoration-color: color(--color-code);
	}

	100% {
		text-underline-offset: -1.55em;
		text-underline-position: under;
		text-decoration-skip-ink: none;
		text-decoration-thickness: 3px;
		text-decoration-line: underline;
		text-decoration-color: transparent;
	}
}
